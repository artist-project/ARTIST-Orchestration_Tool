-- @atlcompiler emftvm
-- @nsURI UMLMM=http://www.eclipse.org/uml2/4.0.0/UML

module DomainModelObjectificationDAO;
create UMLM_OUT : UMLMM refining UMLM : UMLMM, OBJECTIFY : UMLMM;

helper def: objectifyProfile : UMLMM!Profile = UMLMM!Profile.allInstancesFrom('OBJECTIFY').first();
helper def: stereotypes : Sequence(UMLMM!Stereotype) = UMLMM!Stereotype.allInstancesFrom('OBJECTIFY');

rule ObjectifiedPackage {
	from s : UMLMM!Package in UMLM (s.ownedElement -> exists(e|e.isStereotypeApplied(thisModule.stereotypes -> any(e | e.name = 'Entity'))))
	to t : UMLMM!Package(),
	   t1: UMLMM!Package(
	   		name <- 'service',
			packagedElement <- s.ownedElement -> select(e|e.isStereotypeApplied(thisModule.stereotypes -> any(e | e.name = 'Entity'))) ->
							   collect(e|thisModule.ObjectifiedClass(e))
	   )
	do {
		t.refImmediateComposite().packagedElement <- Sequence{t, t1};
	}
}

-- TODO: Shall we also produce interfaces?
unique lazy rule ObjectifiedClass {
    from s : UMLMM!Class in UMLM 
    to t : UMLMM!Class(
   		name <- s.name.concat('Service'),
		ownedOperation <- Sequence{thisModule.CreateCreateServiceOperation(s), thisModule.CreateFindByIdServiceOperation(s), 
		                           thisModule.CreateFindAllServiceOperation(s), thisModule.CreateUpdateServiceOperation(s),
							       thisModule.CreateRemoveServiceOperation(s)}
	)
	do {
		t;	
	}
}

unique lazy rule CreateCreateServiceOperation {
	from s : UMLMM!Class in UMLM  	
	to t : UMLMM!Operation (
		name <- 'create'.concat(s.name)
	)
	do {
		t.ownedParameter <- Sequence {thisModule.CreateParameter('entityToCreate', s, 'in', 'create', 1, false),
		                              thisModule.CreateParameter('createdEntity', s, 'return', 'create', 1, false)};
		t;
	}
}

unique lazy rule CreateFindByIdServiceOperation {
	from s : UMLMM!Class in UMLM  	
	to t : UMLMM!Operation (
		name <- 'find'.concat(s.name)
	)
	do {
		t.ownedParameter <- Sequence {thisModule.CreateParameter('entityId', s.ownedAttribute -> any(p | p.isID).type, 'in', 'read', 1, false),
		                              thisModule.CreateParameter('retrievedEntity', s, 'return', 'read', 0, false)};
		t;
	}
}

unique lazy rule CreateFindAllServiceOperation {
	from s : UMLMM!Class in UMLM  	
	to t : UMLMM!Operation (
		name <- 'findAll'.concat(s.name)
	)
	do {
		t.ownedParameter <- Sequence{thisModule.CreateParameter('retrievedEntities', s, 'return', 'read', 0, true)};
		t;	
	}
}

unique lazy rule CreateUpdateServiceOperation {
	from s : UMLMM!Class in UMLM  	
	to t : UMLMM!Operation (
		name <- 'update'.concat(s.name)	
	)
	do {
		t.ownedParameter <- Sequence {thisModule.CreateParameter('entityToUpdate', s, 'in', 'update', 1, false),
			                          thisModule.CreateParameter('updatedEntity', s, 'return', 'update', 1, false)};	
		t;	
	}
}

unique lazy rule CreateRemoveServiceOperation {
	from s : UMLMM!Class in UMLM  	
	to t : UMLMM!Operation (
		name <- 'remove'.concat(s.name)
	)
	do {
		t.ownedParameter <- Sequence{thisModule.CreateParameter('entityToRemove', s, 'in', 'delete', 1, false)};	
		t;	
	}	
}

rule CreateParameter(parameterName : String, type : UMLMM!Type, direction : String, effect : String, lower : Integer, isMultiValued : Boolean) {
	to t : UMLMM!Parameter (
		name <- parameterName,
		type <- type,
		-- default value is 'in'
		direction <- if(direction = 'return') then #return else OclUndefined endif,
		lower <- lower,
		-- http://wiki.eclipse.org/ATL/User_Guide_-_The_ATL_Language#Numerical_data_type_operations)
		upper <- if(isMultiValued) then 0-1 else 1 endif
	)
	do {
		t;
	}
}

