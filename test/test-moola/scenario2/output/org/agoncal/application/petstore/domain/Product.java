/*******************************************************************************
 * File generated from the petstore-app::org::agoncal::application::petstore::domain::Product uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 04. September 2015 09:24:22 MESZ
 *******************************************************************************/
package org.agoncal.application.petstore.domain;

import com.googlecode.objectify.annotation.Id;
import com.googlecode.objectify.annotation.Entity;
import com.googlecode.objectify.Ref;
import java.lang.Long;
import java.util.ArrayList;
import java.util.List;
import org.agoncal.application.petstore.domain.Category;
import org.agoncal.application.petstore.domain.Item;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Product.
 * 
 * @author 
 */
@Entity
public class Product {
	/**
	 * Description of the property id.
	 */
	@Id
	private Long
	 id
	;
	/**
	 * Description of the property name.
	 */
	
	private String
	 name
	;
	/**
	 * Description of the property description.
	 */
	
	private String
	 description
	;
	/**
	 * Description of the property category.
	 */
	
	public 
	Ref<Category>
	
	 category
	;
	/**
	 * Description of the property items.
	 */
	
	private 
	List<
	Ref<Item>
	>
	
	 items
	;
	// Start of user code (user defined attributes for Product)
	
	// End of user code
	
	/**
	 * The default constructor.
	 */
	public Product() {
		
	}
	
	/**
	 * Description of the method getId.
	 * @return 
	 */
	
	public long
	 getId() {
		return this.id;
	}
	 
	/**
	 * Description of the method getName.
	 * @return 
	 */
	
	public String
	 getName() {
		return this.name;
	}
	 
	/**
	 * Description of the method getDescription.
	 * @return 
	 */
	
	public String
	 getDescription() {
		return this.description;
	}
	 
	/**
	 * Description of the method getCategory.
	 * @return 
	 */
	
	public Category
	 getCategory() {
		return this.category.get();
	}
	 
	/**
	 * Description of the method getItems.
	 * @return 
	 */
	
	public 
	List<Item>
	
	 getItems() {
		List<Item> items = new ArrayList<Item>();
		
			        if(this.items != null) {
			        	for (Ref<Item> item : this.items) {
			                items.add(item.get());
			            }
			        }
			        
			        return items;
	}
	 
	/**
	 * Description of the method setId.
	 * @param id 
	 */
	
	public void
	 setId( long id) {
		this.id = id;
	}
	 
	/**
	 * Description of the method setName.
	 * @param name 
	 */
	
	public void
	 setName( String name) {
		this.name = name;
	}
	 
	/**
	 * Description of the method setDescription.
	 * @param description 
	 */
	
	public void
	 setDescription( String description) {
		this.description = description;
	}
	 
	/**
	 * Description of the method setCategory.
	 * @param category 
	 */
	
	public void
	 setCategory( Category category) {
		this.category = Ref.create(category);
	}
	 
	/**
	 * Description of the method setItems.
	 * @param items 
	 */
	
	public void
	 setItems( List<Item> items) {
		this.items = new ArrayList<Ref<Item>>();
					for (Item item : items) {
						this.items.add(Ref.create(item));
					}
	}
	 
	/**
	 * Description of the method addItem.
	 * @param item 
	 */
	
	public void
	 addItem( Item item) {
		if (items == null)
		   				items = new ArrayList<Ref<Item>>();
					
					items.add(Ref.create(item));
	}
	 
	// Start of user code (user defined methods for Product)
	
	// End of user code
	

	

	

	

	



}
